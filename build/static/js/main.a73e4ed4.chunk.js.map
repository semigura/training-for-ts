{"version":3,"sources":["components/_Footer.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","href","src","class","aria-hidden","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gRAkDeA,MA9Cf,WACE,OACE,4BAAQC,UAAU,gBAChB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,0BAAb,kCACA,uBAAGA,UAAU,6BAAb,kFACA,wBAAIA,UAAU,oCACZ,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,0BAAd,8BACA,wBAAIA,UAAU,iCAAd,0MAEF,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,0BAAd,8BACA,wBAAIA,UAAU,iCAAd,iBAEF,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,0BAAd,8BACA,wBAAIA,UAAU,iCAAgC,uBAAGC,KAAK,MAAR,qBAIpD,yBAAKD,UAAU,cACb,uBAAGA,UAAU,oBAAmB,uBAAGC,KAAK,KAAKD,UAAU,oBAAmB,yBAAKE,IAAI,iCAAiCC,MAAM,KAAKC,cAAY,SAA3G,mCAChC,uBAAGJ,UAAU,oBAAmB,uBAAGC,KAAK,KAAKD,UAAU,oBAAmB,yBAAKE,IAAI,iCAAiCC,MAAM,KAAKC,cAAY,SAA3G,6BAChC,uBAAGJ,UAAU,oBAAmB,uBAAGC,KAAK,KAAKD,UAAU,oBAAmB,yBAAKE,IAAI,iCAAiCC,MAAM,KAAKC,cAAY,SAA3G,2CAGpC,yBAAKJ,UAAU,yBACb,wBAAIA,UAAU,qBACZ,wBAAIA,UAAU,2BAA0B,uBAAGC,KAAK,KAAKD,UAAU,2BAAvB,mCACxC,wBAAIA,UAAU,2BAA0B,uBAAGC,KAAK,KAAKD,UAAU,2BAAvB,yCACxC,wBAAIA,UAAU,2BAA0B,uBAAGC,KAAK,KAAKD,UAAU,2BAAvB,+CACxC,wBAAIA,UAAU,2BAA0B,uBAAGC,KAAK,KAAKD,UAAU,2BAAvB,kEAE1C,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,4BAA2B,uBAAGC,KAAK,KAAKD,UAAU,4BAAvB,UACzC,wBAAIA,UAAU,4BAA2B,uBAAGC,KAAK,KAAKD,UAAU,4BAAvB,UACzC,wBAAIA,UAAU,4BAA2B,uBAAGC,KAAK,KAAKD,UAAU,4BAAvB,YAG7C,uBAAGA,UAAU,mBAAkB,2BAAOA,UAAU,yBAAjB,8D,MClCtBK,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a73e4ed4.chunk.js","sourcesContent":["import React from 'react';\nimport './_Footer.scss';\nimport 'sanitize.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"globalFooter\">\n      <div className=\"globalFooter__content\">\n        <div className=\"footerOfficeInfo\">\n          <p className=\"footerOfficeInfo__name\">渋谷区役所</p>\n          <p className=\"footerOfficeInfo__address\">〒150-8010 東京都渋谷区宇田川町1-1</p>\n          <dl className=\"footerOfficeInfo__definitionList\">\n            <div className=\"footerOfficeInfo__definition\">\n              <dt className=\"footerOfficeInfo__term\">[開庁時間]</dt>\n              <dd className=\"footerOfficeInfo__description\">8時30分から17時（土曜日・日曜日、祝・休日および12月29日から1月3日を除く）</dd>\n            </div>\n            <div className=\"footerOfficeInfo__definition\">\n              <dt className=\"footerOfficeInfo__term\">[電話番号]</dt>\n              <dd className=\"footerOfficeInfo__description\">03-3463-1211</dd>\n            </div>\n            <div className=\"footerOfficeInfo__definition\">\n              <dt className=\"footerOfficeInfo__term\">[法人番号]</dt>\n              <dd className=\"footerOfficeInfo__description\"><a href=\"##\">9000020131130</a></dd>\n            </div>\n          </dl>\n        </div>\n        <div className=\"footerLink\">\n          <p className=\"footerLink__item\"><a href=\"##\" className=\"footerLink__link\"><img src=\"https://placehold.jp/14x14.png\" class=\"fa\" aria-hidden=\"true\"></img>区役所案内</a></p>\n          <p className=\"footerLink__item\"><a href=\"##\" className=\"footerLink__link\"><img src=\"https://placehold.jp/14x14.png\" class=\"fa\" aria-hidden=\"true\"></img>区の組織</a></p>\n          <p className=\"footerLink__item\"><a href=\"##\" className=\"footerLink__link\"><img src=\"https://placehold.jp/14x14.png\" class=\"fa\" aria-hidden=\"true\"></img>お問い合わせ</a></p>\n        </div>\n      </div>\n      <div className=\"globalFooter__content\">\n        <ul className=\"footerUtilityList\">\n          <li className=\"footerUtilityList__item\"><a href=\"##\" className=\"footerUtilityList__link\">携帯サイト</a></li>\n          <li className=\"footerUtilityList__item\"><a href=\"##\" className=\"footerUtilityList__link\">サイトマップ</a></li>\n          <li className=\"footerUtilityList__item\"><a href=\"##\" className=\"footerUtilityList__link\">サイトポリシー</a></li>\n          <li className=\"footerUtilityList__item\"><a href=\"##\" className=\"footerUtilityList__link\">アクセシビリティ方針</a></li>\n        </ul>\n        <ul className=\"footerShareButtons\">\n          <li className=\"footerShareButtons__item\"><a href=\"##\" className=\"footerShareButtons__link\">dummy</a></li>\n          <li className=\"footerShareButtons__item\"><a href=\"##\" className=\"footerShareButtons__link\">dummy</a></li>\n          <li className=\"footerShareButtons__item\"><a href=\"##\" className=\"footerShareButtons__link\">dummy</a></li>\n        </ul>\n      </div>\n      <p className=\"footerCopyright\"><small className=\"footerCopyright__text\">Copyright © Shibuya City Office All Rights Reserved.</small></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Footer from './components/_Footer';\nimport './App.scss';\nimport 'sanitize.css';\n\nfunction App() {\n  return (\n    <Footer></Footer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}